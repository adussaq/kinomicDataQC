kinomicsImportDA={JSON:function(){kinomicsImportDA.JSON.triples="";kinomicsImportDA.JSON.barcodes={}},flatFileAnalysis:{JSON:function(){var a=kinomicsImportDA.flatFileAnalysis.JSON;a.file={};a.bioNavVersion="";a.protocolFileName="";a.dateAnalyized="";a.peptides=[];a.metadata=[];a.metaDataLocations={}},cleanAndSplitFile:function(a){a=a.replace(/\r/g,"\n");a=a.replace(/\n+$/g,"\n");a=a.replace(/\n\n/g,"\n");a=a.replace(/\n\s+\n/g,"\n");kinomicsImportDA.flatFileAnalysis.getHeaderInfo(a.split("\n"))},
getHeaderInfo:function(a){var c=kinomicsImportDA.flatFileAnalysis.JSON,d=kinomicsImportDA.flatFileAnalysis,f;f=a.shift();f=f.replace(/\s+$|^\s+/,"");f=f.replace(/\"/g,"");f=f.split(/\t|Date/);c.bioNavVersion=d.findInHeader("BioNavigator Version",f);c.protocolFileName=d.findInHeader("Protocol file name",f);c.dateAnalyized=f.pop();d.splitFile(a)},splitFile:function(a){for(var c=kinomicsImportDA.flatFileAnalysis.JSON,d=kinomicsImportDA.flatFileAnalysis,f=[],b=0;b<a.length;b++){var g=a[b].replace(/^\s+|\s+$/,
"").split("\t"),h=g.shift(),h=h.replace(/[^\w-]+/g,"_"),h=h.replace(/[_]+/g,"_"),h=h.replace(/[_]+$/,"");f.push(h);c.file[h]=g}c.peptides=f.slice(f.length-152,f.length);c.metadata=f.slice(0,f.length-152);d.mapDataToJSON()},mapDataToJSON:function(){var a=kinomicsImportDA.JSON,c=kinomicsImportDA.flatFileAnalysis.JSON,d=kinomicsImportDA.flatFileAnalysis,f=c.metaDataLocations,b;f.bar=d.grep(c.metadata,/\bbarcode\b/i)[0];f.well=d.grep(c.metadata,/\brow\b/i)[0];f.image=d.grep(c.metadata,/\bimage\b/i)[0];
f.exposureTime=d.grep(c.metadata,/\bexposure/i)[0];f.cycleNum=d.grep(c.metadata,/\bcycle\b/i)[0];b=d.grep(c.metadata,/\bimage_timestamp|\barray|\bfilter|\binstrument_unit|\bgrid/i).join("|");f.toRemove=RegExp(f.image+"|"+f.exposureTime+"|"+f.cycleNum+"|"+b,"i");c.file[f.bar].map(function(b,h){var e="barcode"+b+"_well"+c.file[f.well][h];"undefined"==typeof a.barcodes[e]&&(a.barcodes[e]=new d.Sample(e));d.addFullMetaData(e,h);d.addFullProtData(e,h)});self.postMessage(JSON.stringify(a.barcodes))},addFullMetaData:function(a,
c){var d=kinomicsImportDA.JSON,f=kinomicsImportDA.flatFileAnalysis.JSON,b=kinomicsImportDA.flatFileAnalysis,g=d.barcodes[a],h;for(h in f.metadata){var e=f.metadata[h],i=f.file[e][c];b.checkMeta(e)||("undefined"==typeof d.barcodes[a][e]&&(g[e]={},g[e][i]=0),"undefined"==typeof g[e][i]&&(g[e][i]=0),g[e][i]++)}g.totalReads++},addFullProtData:function(a,c){var d=kinomicsImportDA.flatFileAnalysis.JSON,f=kinomicsImportDA.flatFileAnalysis,b=d.metaDataLocations,g=kinomicsImportDA.JSON.barcodes[a].peptides,
h;for(h in d.peptides){var e=d.peptides[h];"undefined"==typeof g[e]&&(g[e]=new f.Peptide);var i=d.file[b.image][c],j=d.file[b.exposureTime][c],n=d.file[b.cycleNum][c],l=d.file[e][c],k=g[e].timeSeries,e=g[e].postWash;93>n?(k.image.push(i),k.exposureT.push(j),k.cycleN.push(n),k.number.push(l),k.goodData.push(!0)):(e.image.push(i),e.exposureT.push(j),e.cycleN.push(n),e.number.push(l),e.goodData.push(!0))}},Sample:function(){var a=kinomicsImportDA.flatFileAnalysis.JSON;this.bioNavVersion={};this.protocolFileName=
{};this.dateAnalyized={};this.bioNavVersion[a.bioNavVersion]=1;this.protocolFileName[a.protocolFileName]=1;this.dateAnalyized[a.dateAnalyized]=1;this.totalReads=0;this.peptides={}},Peptide:function(){this.timeSeries={};this.postWash={};var a=this.timeSeries;a.cycleN=[];a.image=[];a.exposureT=[];a.number=[];a.goodData=[];a=this.postWash;a.cycleN=[];a.image=[];a.exposureT=[];a.number=[];a.goodData=[]},checkMeta:function(a){return a.match(kinomicsImportDA.flatFileAnalysis.JSON.metaDataLocations.toRemove)?
1:0},findInHeader:function(a,c){var d=c.indexOf(a);return c[d+1]},grep:function(a,c){var d=[];a.map(function(a){a.match(c)&&d.push(a)});return d}},fitData:function(a){var c=a.shift(),d=a.shift(),f=a.shift(),a=a.shift(),b=[],g=[],h=[],e;if("postWash"==a){b=c.exposureT;g=c.number;h=c.goodData;c=kinomicsActiveData.JSON.postWashFunc;amdjs.Arr_max(b);var i=amdjs.Arr_min(b);e=amdjs.Arr_max(g);var j=amdjs.Arr_min(g),n=8;0==j&&(j=10);e=[j/i,10]}else if("timeSeries"==a)b=c.cycleN,g=c.number,h=c.goodData,c=
kinomicsActiveData.JSON.timeSeriesFunc;else return;for(var i=[],l=[],j=0;j<b.length;j++){var k=b[j],m=g[j];h[j]&&(l.push(Number(m)),i.push([Number(k)]))}"timeSeries"==a&&(amdjs.Arr_max(i),e=amdjs.Arr_max(l),j=amdjs.Arr_min(l),k=amdjs.clone(i),k=k.sort(),h=k.shift(),m=k.pop(),h=h[0],m=m[0],k=Number(g[b.indexOf(JSON.stringify(h))]),b=0>(Number(g[b.indexOf(JSON.stringify(m))])-k)/(m-h)?j:e,g=b/5,e=[g,e*k/(g*(j-e))+h,b]);b=amdjs.fmincon(c,e,i,l);if("timeSeries"==a&&0.4>b[3]){g=[];g[0]=b;e=amdjs.clone(i);
j=amdjs.clone(l);for(m=0;m<i.length;m++){var h=e.shift(),k=j.shift(),o=amdjs.fmincon(c,g[0],e,j);o[1]=amdjs.sqrSumOfErrors(c,i,l,o[0]);g[m+1]=o;if(0.99<=o[2]||0.6<=o[3])break;e.push(h);j.push(k)}for(e=0;e<n;e++)g[e+1][1]<b[1]&&(b=g[e+1]);b=amdjs.fmincon(c,b[0],i,l)}b=[d,f,a].concat(b);self.postMessage(JSON.stringify(b))}};
amdjs={sqrSumOfErrors:function(a,c,d,f){var b=0,g;for(g in c)b+=Math.pow(a(c[g],f)-d[g],2);return b},fmincon:function(a,c,d,f,b){b={};b.step=c.map(function(a){return a/100});b.maxItt=1E3;b.minPer=1E-6;var g=Infinity,h=0;for(itt=0;itt<b.maxItt;itt++){var e=amdjs.clone(c);for(parI in e)e[parI]+=b.step[parI],amdjs.sqrSumOfErrors(a,d,f,e)<amdjs.sqrSumOfErrors(a,d,f,c)?(c[parI]=e[parI],b.step[parI]*=1.2):b.step[parI]*=-0.5;e=amdjs.sqrSumOfErrors(a,d,f,c);if(3<h){if(Math.abs(1-e/g)<b.minPer)break;g=e;h=
-1}h++}var b=0,g=amdjs.Arr_avg(f),i;for(i in d)b+=Math.pow(g-f[i],2);i=amdjs.sqrSumOfErrors(a,d,f,c);var b=1-i/b,j=[];d.map(function(b){return j.push(a(b,c))});g=amdjs.lookAtRes(f,j);i=amdjs.sqrSumOfErrors(a,d,f,c);return[amdjs.clone(c),i,b,g]},lookAtRes:function(a,c){var d=0,f=[],b;for(b in a)f[b]=a[b]-c[b];var g=amdjs.clone(f);g.shift();for(b in g)0<g[b]*f[b]&&d++;return 1-d/c.length},Arr_min:function(a){return Math.min.apply(null,a)},Arr_max:function(a){return Math.max.apply(null,a)},sum:function(a){return Array.isArray(a[0])?
a.map(function(a){return jmat.sum(a)}):a.reduce(function(a,d){return a+d})},clone:function(a){return JSON.parse(JSON.stringify(a))},Arr_avg:function(a){return amdjs.sum(a)/a.length}};kinomicsActiveData={JSON:function(){var a=kinomicsActiveData.JSON;a.timeSeriesFunc=function(a,d){return 1/(1/(d[0]*(a[0]-d[1]))+1/d[2])};a.postWashFunc=function(a,d){return d[0]*a[0]+d[1]}}};kinomicsImportDA.JSON();kinomicsActiveData.JSON();kinomicsImportDA.flatFileAnalysis.JSON();
self.addEventListener("message",function(a){var c=JSON.parse(a.data),a=c.shift(),c=c.shift();"getFileFromFlat"==a&&kinomicsImportDA.flatFileAnalysis.cleanAndSplitFile(c);"fitData"==a&&kinomicsImportDA.fitData(JSON.parse(c))},!1);